{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/global/window.js",
    "src/js/index.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n",
    "'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar videojs = _interopDefault(require('video.js'));\nvar window = _interopDefault(require('global/window'));\n\n/**\n * Player status for extended descriptions (playback of descriptions while pausing the tech)\n *\n * @typedef extendedPlayerState\n * @enum\n */\nconst extendedPlayerState = {\n  unknown: 'unknown',\n  initialized: 'initialized',\n  playing: 'playing',\n  paused: 'paused',\n  playingExtended: 'playingExtended',\n  pausedExtended: 'pausedExtended'\n};\n\n// TODO: user control over this attribute?\nconst audioDuckingFactor = 0.25;\n\n/**\n * The SpeakDescriptionsTrackTTS component\n */\nclass SpeakDescriptionsTrackTTS {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   */\n  constructor(player) {\n    this.player_ = player;\n    this.extendedPlayerState_ = extendedPlayerState.initialized;\n    this.isDucked = false;\n\n    if (window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n  }\n\n  /**\n   * Dispose of the `SpeakDescriptionsTrackTTS`\n   */\n  dispose() {\n  }\n\n  play() {\n    const speechSynthesis = window.speechSynthesis;\n\n    if (speechSynthesis.paused) {\n      speechSynthesis.resume();\n    }\n  }\n\n  pause() {\n    const speechSynthesis = window.speechSynthesis;\n\n    if (speechSynthesis.speaking) {\n      speechSynthesis.pause();\n    }\n  }\n\n  paused() {\n    return (\n      this.extendedPlayerState_ === extendedPlayerState.paused ||\n      this.extendedPlayerState_ === extendedPlayerState.pausedExtended\n    );\n  }\n\n  textTrackChange() {\n    const tracks = this.player_.textTracks();\n    let descriptionsTrack = null;\n    let i = tracks.length;\n\n    while (i--) {\n      const track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        }\n      }\n    }\n\n    if (descriptionsTrack) {\n      this.speakActiveCues(descriptionsTrack);\n    }\n  }\n\n  /**\n   * Use browser Speech Synthesis (aka TTS) to speak active cues, if supported\n   *\n   * @param {TextTrackObject} track Texttrack object to speak\n   * @method speakActiveCues\n   */\n  speakActiveCues(track) {\n    if (!window.SpeechSynthesisUtterance || !window.speechSynthesis) {\n      return;\n    }\n\n    const speechSynthesis = window.speechSynthesis;\n\n    let textToSpeak = [];\n    let startTime = Infinity;\n    let endTime = -Infinity;\n    const ct = this.player_.currentTime();\n\n    if (track.activeCues) {\n      // TODO: Need to handle this logic better; it's possible that a new cue\n      //       started while another is still active. We don't handle that correctly.\n      for (let i = 0; i < track.activeCues.length; i++) {\n        textToSpeak.push(track.activeCues[i].text);\n        startTime = Math.min(track.activeCues[i].startTime, startTime);\n        endTime = Math.max(track.activeCues[i].endTime, endTime);\n      }\n      // TODO: handle any HTML markup in the cues properly; for now,\n      //       we just strip out HTML markup.\n      textToSpeak = textToSpeak.join('\\r\\n').replace(/<(?:.|\\n)*?>/gm, '');\n    }\n\n    if (textToSpeak) {\n      if (speechSynthesis.speaking) {\n        // TODO: Handle description cue collision\n        videojs.log.warn(`Speech synthesis collision (${textToSpeak} - ${this.ssu.text}) : ${ct} : ${this.startTime} : ${this.endTime}`);\n\n        speechSynthesis.cancel();\n\n      } else if (speechSynthesis.paused) {\n        // TODO: Handle if speech synthesis is paused here\n        videojs.log.warn(`Speech synthesis collision (paused) (${textToSpeak} - ${this.ssu.text}) : ${ct} : ${this.startTime} : ${this.endTime}`);\n\n        speechSynthesis.cancel();\n        speechSynthesis.resume();\n      }\n\n      // Store info about the current cue for debugging and/or logging\n      this.startTime = startTime;\n      this.endTime = endTime;\n\n      // TODO: Need to dispose of this ssu after it is finished?\n      this.ssu = new window.SpeechSynthesisUtterance();\n\n      this.ssu.text = textToSpeak;\n      this.ssu.lang = this.increaseLanguageLocalization(track.language);\n\n      // TODO: user control over these attributes\n      this.ssu.rate = 1.1;\n      this.ssu.pitch = 1.0;\n      this.ssu.volume = 1.0;\n\n      // TODO: This audio ducking needs to be made more robust\n      this.ssu.onstart = function(e) {\n        // Duck the player's audio\n        if (!this.isDucked) {\n          this.isDucked = true;\n          this.player_.tech_.volume(this.player_.tech_.volume() * audioDuckingFactor);\n        }\n      }.bind(this);\n      this.ssu.onend = function(e) {\n        // Speech synthesis of a cue has ended\n\n        const delta = (Date.now() - this.ssu.startDate) / 1000;\n\n        videojs.log(`SpeakDescriptionsTrackTTS of cue: ${this.startTime} : ${this.endTime} : ${this.endTime - this.startTime} : ${delta} : ${(delta * 100.0 / (this.endTime - this.startTime)).toFixed(1)}%`);\n\n        // Un-duck the player's audio\n        if (this.isDucked) {\n          this.isDucked = false;\n          this.player_.tech_.volume(this.player_.tech_.volume() / audioDuckingFactor);\n        }\n\n        if (this.extendedPlayerState_ === extendedPlayerState.playingExtended) {\n          videojs.log('Un-pausing playback');\n          this.extendedPlayerState_ = extendedPlayerState.playing;\n          this.player_.tech_.play();\n          this.descriptionExtended = false;\n        }\n      }.bind(this);\n      this.ssu.onerror = function(e) {\n        // An error occured during speech synthesis\n\n        const delta = (Date.now() - this.ssu.startDate) / 1000;\n\n        videojs.log.warn(`SSU error (${this.ssu.text})`);\n        videojs.log.warn(`SpeakDescriptionsTrackTTS of cue: ${this.startTime} : ${this.endTime} : ${this.endTime - this.startTime} : ${delta} : ${(delta * 100.0 / (this.endTime - this.startTime)).toFixed(1)}%`);\n\n        // Un-duck the player's audio\n        if (this.isDucked) {\n          this.isDucked = true;\n          this.player_.tech_.volume(this.player_.tech_.volume() / audioDuckingFactor);\n        }\n\n        if (this.extendedPlayerState_ === extendedPlayerState.playingExtended) {\n          videojs.log('Un-pausing playback');\n          this.extendedPlayerState_ = extendedPlayerState.playing;\n          this.player_.tech_.play();\n          this.descriptionExtended = false;\n        }\n      }.bind(this);\n\n      // Start speaking the new textToSpeak\n\n      this.ssu.startDate = Date.now();\n      speechSynthesis.speak(this.ssu);\n\n    } else {\n      // No current textToSpeak, so a cue's display time has ended.\n\n      if (speechSynthesis.speaking) {\n        // Speech synthesis is still speaking - handle description cue overrun\n        videojs.log('Pausing playback');\n\n        this.extendedPlayerState_ = extendedPlayerState.playingExtended;\n        this.descriptionExtended = true;\n        this.player_.tech_.pause();\n\n      } else if (speechSynthesis.paused) {\n        // TODO: Handle if speech synthesis is paused here\n        videojs.log.warn(`Speech synthesis overrun (paused) (${this.ssu.text}) : ${this.startTime} : ${this.endTime}`);\n\n        speechSynthesis.cancel();\n        speechSynthesis.resume();\n\n   // } else if (this.ssu) {\n     // videojs.log(`Speech had ended before end of cue (${this.ssu.text}) : ${this.startTime} : ${this.endTime} : ${ct}`);\n\n      }\n\n      return;\n    }\n  }\n\n  /**\n   * Try to improve the localization of the text track language, using\n   *  the player's language setting and the browser's language setting.\n   *  e.g. if lang='en' and language = 'en-US', use the more specific\n   *  localization of language.\n   *\n   * @param {string} lang the lang attribute to try to improve\n   * @return {string} the improved lang attribute\n   * @method increaseLanguageLocalization\n   */\n  increaseLanguageLocalization(lang) {\n    const playerLanguage = this.player_.language && this.player_.language();\n    const navigatorLanguage = window.navigator && window.navigator.language;\n\n    if (\n      lang &&\n      (typeof lang === 'string') &&\n      (typeof playerLanguage === 'string') &&\n      (playerLanguage.length > lang.length) &&\n      (playerLanguage.toLowerCase().indexOf(lang.toLowerCase()) === 0)\n    ) {\n\n      lang = playerLanguage;\n    }\n\n    if (\n      lang &&\n      (typeof lang === 'string') &&\n      (typeof navigatorLanguage === 'string') &&\n      (navigatorLanguage.length > lang.length) &&\n      (navigatorLanguage.toLowerCase().indexOf(lang.toLowerCase()) === 0)\n    ) {\n\n      lang = navigatorLanguage;\n    }\n\n    return lang;\n  }\n}\n\nconst speakDescriptionsTrack = function(player) {\n  let tech;\n\n  player.speakDescriptionsTTS = new SpeakDescriptionsTrackTTS(player);\n  player.on('texttrackchange', player.speakDescriptionsTTS.textTrackChange.bind(player.speakDescriptionsTTS));\n  player.on('dispose', player.speakDescriptionsTTS.dispose.bind(player.speakDescriptionsTTS));\n\n  return {\n    setSource(srcObj, next) {\n      next(null, srcObj);\n    },\n\n    setTech(newTech) {\n      tech = newTech;\n\n      player.off(tech, 'pause', player.handleTechPause_);\n\n      tech.on('pause', (event) => {\n        if (player.speakDescriptionsTTS && player.speakDescriptionsTTS.extendedPlayerState_) {\n          if (player.speakDescriptionsTTS.extendedPlayerState_ !== extendedPlayerState.playingExtended) {\n            player.handleTechPause_();\n          }\n        }\n      });\n    },\n\n    // TODO: Eventually we may modify the duration and/or current time to allow\n    //       for the time that the video is paused for extended description.\n    //       For now, we just treat it as though the video stalled while streaming.\n    duration(dur) {\n      return dur;\n    },\n\n    currentTime(ct) {\n      return ct;\n    },\n\n    setCurrentTime(ct) {\n      return ct;\n    },\n\n    volume(vol) {\n      if (player.speakDescriptionsTTS && player.speakDescriptionsTTS.isDucked) {\n        return vol / audioDuckingFactor;\n      }\n\n      return vol;\n    },\n\n    setVolume(vol) {\n      if (player.speakDescriptionsTTS && player.speakDescriptionsTTS.isDucked) {\n        return vol * audioDuckingFactor;\n      }\n\n      return vol;\n    },\n\n    paused() {\n      if (player.speakDescriptionsTTS) {\n        return player.speakDescriptionsTTS.paused();\n      }\n    },\n\n    callPlay() {\n      if (!player.speakDescriptionsTTS) {\n        return;\n      }\n\n      if (!player.speakDescriptionsTTS.extendedPlayerState_) {\n        player.speakDescriptionsTTS.extendedPlayerState_ = extendedPlayerState.unknown;\n      }\n\n      switch (player.speakDescriptionsTTS.extendedPlayerState_) {\n      case extendedPlayerState.unknown:\n      case extendedPlayerState.initialized:\n      case extendedPlayerState.paused:\n        player.speakDescriptionsTTS.extendedPlayerState_ = extendedPlayerState.playing;\n        player.speakDescriptionsTTS.play();\n        return;\n\n      case extendedPlayerState.pausedExtended:\n        player.speakDescriptionsTTS.extendedPlayerState_ = extendedPlayerState.playingExtended;\n        player.speakDescriptionsTTS.play();\n        return videojs.middleware.TERMINATOR;\n      }\n\n      return;\n    },\n\n    callPause() {\n      if (!player.speakDescriptionsTTS) {\n        return;\n      }\n\n      if (!player.speakDescriptionsTTS.extendedPlayerState_) {\n        player.speakDescriptionsTTS.extendedPlayerState_ = extendedPlayerState.unknown;\n      }\n\n      switch (player.speakDescriptionsTTS.extendedPlayerState_) {\n      case extendedPlayerState.unknown:\n      case extendedPlayerState.initialized:\n      case extendedPlayerState.playing:\n        player.speakDescriptionsTTS.extendedPlayerState_ = extendedPlayerState.paused;\n        player.speakDescriptionsTTS.pause();\n        return;\n\n      case extendedPlayerState.playingExtended:\n        player.speakDescriptionsTTS.extendedPlayerState_ = extendedPlayerState.pausedExtended;\n        player.speakDescriptionsTTS.pause();\n        return videojs.middleware.TERMINATOR;\n      }\n\n      return;\n    }\n  };\n};\n\n// Register the plugin with video.js.\nvideojs.use('*', speakDescriptionsTrack);\n\n// Include the version number.\nspeakDescriptionsTrack.VERSION = '__VERSION__';\n\nmodule.exports = speakDescriptionsTrack;\n"
  ]
}